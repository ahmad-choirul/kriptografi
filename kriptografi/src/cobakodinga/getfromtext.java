/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cobakodinga;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class getfromtext extends enkripsiAES {

    /**
     * Creates new form NewJFrame
     */
    String plaintext = "";
    String bacanote[] = new String[10];
    String lokasifilecek = "";
    int index = 0;
    boolean gethashfromcek = false;

    public getfromtext() {
        initComponents();
        salah.setVisible(false);
        benar.setVisible(false);
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        save = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        sha1 = new javax.swing.JTextArea();
        plain = new javax.swing.JTextArea();
        md5 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        sha256 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        cek = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        browsecek = new javax.swing.JButton();
        benar = new javax.swing.JLabel();
        salah = new javax.swing.JLabel();
        hasil = new javax.swing.JTextArea();
        lokasicek = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/get hash.png"))); // NOI18N
        save.setBorderPainted(false);
        save.setContentAreaFilled(false);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 90, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/MD5.PNG"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        sha1.setEditable(false);
        sha1.setColumns(20);
        sha1.setLineWrap(true);
        sha1.setRows(5);
        sha1.setWrapStyleWord(true);
        getContentPane().add(sha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 420, 50));

        plain.setColumns(20);
        plain.setLineWrap(true);
        plain.setRows(5);
        plain.setWrapStyleWord(true);
        getContentPane().add(plain, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 570, 100));

        md5.setEditable(false);
        md5.setColumns(20);
        md5.setLineWrap(true);
        md5.setRows(5);
        md5.setWrapStyleWord(true);
        getContentPane().add(md5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 420, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/back.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 550, 100, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/SHA256.PNG"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/reset.png"))); // NOI18N
        reset.setBorderPainted(false);
        reset.setContentAreaFilled(false);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 550, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/SHA1.PNG"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        sha256.setEditable(false);
        sha256.setColumns(20);
        sha256.setLineWrap(true);
        sha256.setRows(5);
        sha256.setWrapStyleWord(true);
        getContentPane().add(sha256, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 420, 50));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/lokasi kunci.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        cek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/cek.png"))); // NOI18N
        cek.setBorderPainted(false);
        cek.setContentAreaFilled(false);
        cek.setEnabled(false);
        cek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekActionPerformed(evt);
            }
        });
        getContentPane().add(cek, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 510, 90, -1));

        simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/save.png"))); // NOI18N
        simpan.setBorderPainted(false);
        simpan.setContentAreaFilled(false);
        simpan.setEnabled(false);
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 360, 100, -1));

        browsecek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/browse.png"))); // NOI18N
        browsecek.setBorderPainted(false);
        browsecek.setContentAreaFilled(false);
        browsecek.setEnabled(false);
        browsecek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsecekActionPerformed(evt);
            }
        });
        getContentPane().add(browsecek, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 430, 90, -1));

        benar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/file benar.png"))); // NOI18N
        getContentPane().add(benar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 160, 60));

        salah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/file salah.png"))); // NOI18N
        getContentPane().add(salah, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 150, 60));

        hasil.setColumns(20);
        hasil.setRows(5);
        getContentPane().add(hasil, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 450, 50));

        lokasicek.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lokasicek.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lokasicek, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 390, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/background.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            plaintext = plain.getText();
            sha1.setText(sha1fromstring(plaintext));
            md5.setText(MD5fromstring(plaintext));
            sha256.setText(sha256fromstring(plaintext));
            simpan.setEnabled(true);
            gethashfromcek = true;
            browsecek.setEnabled(true);
        } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
            Logger.getLogger(getfromtext.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        plain.setText("");
        sha1.setText("");
        sha256.setText("");
        pilih pil = new pilih();
        pil.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        save.setEnabled(true);
        plain.setText("");
        sha1.setText("");
        md5.setText("");
        sha256.setText("");
        salah.setVisible(false);
        benar.setVisible(false);
        browsecek.setEnabled(false);
    }//GEN-LAST:event_resetActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        if (!gethashfromcek) {
            JOptionPane.showMessageDialog(this, "Data kosong");
        } else {
            try {
                JFileChooser fc = new JFileChooser();
                fc.showSaveDialog(getfromtext.this);
                File file = fc.getSelectedFile();
                FileWriter fileWriter = new FileWriter(file);
                fileWriter.write(md5.getText());
                fileWriter.write("\n");
                fileWriter.write(sha1.getText());
                fileWriter.write("\n");
                fileWriter.write(sha256.getText());
                fileWriter.flush();
                fileWriter.close();
            } catch (IOException e) {
            }
            JOptionPane.showMessageDialog(this, "Data telah tersimpan");
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void browsecekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsecekActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            lokasifilecek = file.getPath();
            lokasicek.setText(lokasifilecek);
            File filecek = new File(lokasifilecek);

            Scanner scan = new Scanner(filecek);
            if (filecek.exists()) {
                while (scan.hasNext()) {
                    String dapat = scan.next();
                    System.out.println("hasil = " + dapat);
                    bacanote[index] = dapat;
                    //hasil.setText(scan.next());
                    index++;
                    System.out.println(index);
                }
                scan.close();
                String hasilbaca = "md5 = " + bacanote[0] + "\n sha1 = " + bacanote[1] + "\n sha256 = " + bacanote[2];
                hasil.setText(hasilbaca);
                cek.setEnabled(true);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(getfromefile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_browsecekActionPerformed

    private void cekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekActionPerformed
        if (bacanote[0].equalsIgnoreCase(md5.getText())) {
            if (bacanote[1].equalsIgnoreCase(sha1.getText())) {
                if (bacanote[2].equalsIgnoreCase(sha256.getText())) {
                    benar.setVisible(true);
                } else {
                    salah.setVisible(true);
                    JOptionPane.showMessageDialog(this, "sha256 tidak cocok");
                }
            } else {
                 salah.setVisible(true);
                JOptionPane.showMessageDialog(this, "sha1 ridak cocok");
            }
        } else {
             salah.setVisible(true);
            JOptionPane.showMessageDialog(this, "data tidak cocok");
        }
    }//GEN-LAST:event_cekActionPerformed
    public static String sha1fromstring(String input) throws NoSuchAlgorithmException {

        MessageDigest mDigest = MessageDigest.getInstance("SHA1");

        byte[] result = mDigest.digest(input.getBytes());
        return convertToHex(result);
    }

    private static String convertToHex(byte[] data) {
        StringBuffer hexString = new StringBuffer();
        for (int i = 0; i < data.length; i++) {
            if ((0xff & data[i]) < 0x10) {
                hexString.append("0").append(Integer.toHexString((0xFF & data[i])));
            } else {
                hexString.append(Integer.toHexString(0xFF & data[i]));
            }
        }
        return hexString.toString();
    }

    public static String MD5fromstring(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {
        MessageDigest md;
        md = MessageDigest.getInstance("MD5");
        byte[] md5hash = new byte[32];
        md.update(text.getBytes("iso-8859-1"), 0, text.length());
        md5hash = md.digest();
        System.out.println("md5 sebelum di converthex " + md5hash);
        return convertToHex(md5hash);
    }

    public static String sha256fromstring(String string) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(string.getBytes("UTF-8"));
            return convertToHex(hash);
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(getfromtext.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(getfromtext.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(getfromtext.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(getfromtext.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new getfromtext().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel benar;
    private javax.swing.JButton browsecek;
    private javax.swing.JButton cek;
    private javax.swing.JTextArea hasil;
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lokasicek;
    private javax.swing.JTextArea md5;
    private javax.swing.JTextArea plain;
    private javax.swing.JButton reset;
    private javax.swing.JLabel salah;
    private javax.swing.JButton save;
    private javax.swing.JTextArea sha1;
    private javax.swing.JTextArea sha256;
    private javax.swing.JButton simpan;
    // End of variables declaration//GEN-END:variables
}
