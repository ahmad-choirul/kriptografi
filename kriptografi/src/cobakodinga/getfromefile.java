/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cobakodinga;

import java.io.File;
import javax.swing.JFileChooser;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.security.DigestInputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class getfromefile extends enkripsiAES {

    /**
     * Creates new form NewJFrame
     */
    String lokasifile = "";
    String lokasifilecek = "";
    String bacanote[] = new String[3];
    int index = 0;
    boolean gethashfromcek = false;

    public getfromefile() {
        initComponents();
        this.setLocationRelativeTo(this);
        benar.setVisible(false);
        salah.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        browse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lokasia = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sha1 = new javax.swing.JTextArea();
        gethash = new javax.swing.JButton();
        back = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        md5 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sha256 = new javax.swing.JTextArea();
        simpan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        browsecek = new javax.swing.JButton();
        hasil = new javax.swing.JTextArea();
        salah = new javax.swing.JLabel();
        benar = new javax.swing.JLabel();
        cek = new javax.swing.JButton();
        lokasicek = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        browse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/browse.png"))); // NOI18N
        browse.setBorderPainted(false);
        browse.setContentAreaFilled(false);
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        getContentPane().add(browse, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 100, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/lokasi file.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 70, 30));

        lokasia.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lokasia.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lokasia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 370, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/SHA1.PNG"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, -1, -1));

        sha1.setEditable(false);
        sha1.setColumns(20);
        sha1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        sha1.setLineWrap(true);
        sha1.setRows(5);
        sha1.setWrapStyleWord(true);
        getContentPane().add(sha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 470, 50));

        gethash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/get hash.png"))); // NOI18N
        gethash.setBorderPainted(false);
        gethash.setContentAreaFilled(false);
        gethash.setEnabled(false);
        gethash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gethashActionPerformed(evt);
            }
        });
        getContentPane().add(gethash, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 100, -1));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/back.png"))); // NOI18N
        back.setBorderPainted(false);
        back.setContentAreaFilled(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 540, 110, -1));

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/reset.png"))); // NOI18N
        reset.setBorderPainted(false);
        reset.setContentAreaFilled(false);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, 100, -1));

        md5.setEditable(false);
        md5.setColumns(20);
        md5.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        md5.setLineWrap(true);
        md5.setRows(5);
        md5.setWrapStyleWord(true);
        getContentPane().add(md5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 470, 50));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/MD5.PNG"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/SHA256.PNG"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, -1));

        sha256.setEditable(false);
        sha256.setColumns(20);
        sha256.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        sha256.setLineWrap(true);
        sha256.setRows(5);
        sha256.setWrapStyleWord(true);
        getContentPane().add(sha256, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 470, 50));

        simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/save.png"))); // NOI18N
        simpan.setBorderPainted(false);
        simpan.setContentAreaFilled(false);
        simpan.setEnabled(false);
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 100, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/lokasi kunci.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        browsecek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/browse.png"))); // NOI18N
        browsecek.setBorderPainted(false);
        browsecek.setContentAreaFilled(false);
        browsecek.setEnabled(false);
        browsecek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsecekActionPerformed(evt);
            }
        });
        getContentPane().add(browsecek, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 100, -1));

        hasil.setEditable(false);
        hasil.setColumns(20);
        hasil.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        hasil.setLineWrap(true);
        hasil.setRows(5);
        hasil.setWrapStyleWord(true);
        getContentPane().add(hasil, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 410, 100));

        salah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/file salah.png"))); // NOI18N
        getContentPane().add(salah, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 160, 60));

        benar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/file benar.png"))); // NOI18N
        getContentPane().add(benar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 150, 50));

        cek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/cek.png"))); // NOI18N
        cek.setBorderPainted(false);
        cek.setContentAreaFilled(false);
        cek.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cek.setEnabled(false);
        cek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekActionPerformed(evt);
            }
        });
        getContentPane().add(cek, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 100, -1));

        lokasicek.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lokasicek.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lokasicek, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 390, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cobakodinga/gambar/background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        lokasifile = file.getPath();
        lokasia.setText(lokasifile);
        gethash.setEnabled(true);
    }//GEN-LAST:event_browseActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        lokasia.setText("");
        sha1.setText("");
        md5.setText("");
        sha256.setText("");
        pilih pil = new pilih();
        pil.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void gethashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gethashActionPerformed
        try {
            sha1.setText(sha1fromfile(lokasifile));
            System.out.println("sha1 panjagng= "+sha1.getText().length());
            md5.setText(md5fromfile(lokasifile));
            System.out.println("md5 panjang = "+md5.getText().length());
            sha256.setText(sha256fromfile(lokasifile));
            System.out.println("sha256 panjang = "+sha256.getText().length());
            simpan.setEnabled(true);
            gethashfromcek = true;
            browsecek.setEnabled(true);
        } catch (IOException | NoSuchAlgorithmException ex) {
            Logger.getLogger(getfromefile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gethashActionPerformed

    private void browsecekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsecekActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            String kunci = JOptionPane.showInputDialog(this, "masukan kunci");
            System.out.println("kuncinya " + kunci);
            SecretKeySpec key = genKey(kunci);
            lokasifilecek = file.getPath();
            lokasicek.setText(lokasifilecek);
            File filecek = new File(lokasifilecek);

            Scanner scan = new Scanner(filecek);
            if (filecek.exists()) {
                for (int i=0;i<2;i++) {
                    String dapat = scan.next();
                    bacanote[index] = decrypt(key, dapat);
                    index++;
                }
                bacanote[2]=scan.next();
                scan.close();
                String hasilbaca = "md5 = " + bacanote[0] + "\n sha1 = " + bacanote[1] + "\n sha256 = " + bacanote[2];
                hasil.setText(hasilbaca);
                cek.setEnabled(true);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(getfromefile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(getfromefile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_browsecekActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        if (!gethashfromcek) {
            JOptionPane.showMessageDialog(this, "Data kosong");
        } else {
            try {
                String md5plain = md5.getText();
                String sha1plain = sha1.getText();
                String sha256plain = sha256.getText();
                String kunci = JOptionPane.showInputDialog(this, "masukan kunci");
                System.out.println("kuncinya " + kunci);
                SecretKeySpec key = genKey(kunci);
                String md5encrypt = encrypt(key, md5plain);
                String sha1encrypt = encrypt(key, sha1plain);
//                String sha256encrypt = encrypt(key, sha256plain);
                try {
                    JFileChooser fc = new JFileChooser();
                    fc.showSaveDialog(getfromefile.this);
                    File file = fc.getSelectedFile();
                    FileWriter fileWriter = new FileWriter(file);
                    fileWriter.write(md5encrypt);
                    fileWriter.write("\n");
                    fileWriter.write(sha1encrypt);
                    fileWriter.write("\n");
                    fileWriter.write(sha256plain);
                    fileWriter.flush();
                    fileWriter.close();
                } catch (IOException e) {
                }
                JOptionPane.showMessageDialog(this, "Data telah tersimpan");
            } catch (Exception ex) {
                Logger.getLogger(getfromefile.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void cekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekActionPerformed
        if (bacanote[0].equalsIgnoreCase(md5.getText())) {
            if (bacanote[1].equalsIgnoreCase(sha1.getText())) {
                if (bacanote[2].equalsIgnoreCase(sha256.getText())) {
                    benar.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "sha256 tidak cocok");
                    salah.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "sha1 ridak cocok");
                salah.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "data tidak cocok");
            salah.setVisible(true);
        }
    }//GEN-LAST:event_cekActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        md5.setText("");
        sha1.setText("");
        sha256.setText("");
        lokasia.setText("");
        lokasicek.setText("");
        lokasifile = "";
        lokasifilecek = "";
        hasil.setText("");
        cek.setEnabled(false);
        benar.setVisible(false);
        salah.setVisible(false);
        int index = 0;
        boolean gethashfromcek = false;
        browsecek.setEnabled(false);
        simpan.setEnabled(false);
        gethash.setEnabled(false);
        for (int i = 0; i < bacanote.length; i++) {
           bacanote[i]="";
            
        }
    }//GEN-LAST:event_resetActionPerformed
    public String sha1fromfile(String filePath) throws IOException, NoSuchAlgorithmException {
        FileInputStream fileInputStream = new FileInputStream(filePath);
        MessageDigest digest = MessageDigest.getInstance("SHA-1");
        DigestInputStream digestInputStream = new DigestInputStream(fileInputStream, digest);
        byte[] bytes = new byte[1024];
        while (digestInputStream.read(bytes) > 0);
        byte[] resultByteArry = digest.digest();
        return bytesToHexString(resultByteArry);
    }

    public String sha256fromfile(String path) throws NoSuchAlgorithmException, FileNotFoundException, IOException {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        FileInputStream fis = new FileInputStream(path);
        byte[] dataBytes = new byte[1024];

        int nread = 0;
        while ((nread = fis.read(dataBytes)) != -1) {
            md.update(dataBytes, 0, nread);
        };
        byte[] mdbytes = md.digest();

        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < mdbytes.length; i++) {
            sb.append(Integer.toString((mdbytes[i] & 0xff) + 0x100, 16).substring(1));
        }
        String hasil = sb.toString();
        return hasil;
    }

    /**
     * Convert a array of byte to hex String. <br/>
     * Each byte is covert a two character of hex String. That is <br/>
     * if byte of int is less than 16, then the hex String will append <br/>
     * a character of '0'.
     *
     * @param bytes array of byte
     * @return hex String represent the array of byte
     */
    public static String bytesToHexString(byte[] bytes) {
        StringBuilder sb = new StringBuilder();
        for (byte b : bytes) {
            int value = b & 0xFF;
            if (value < 16) {
                // if value less than 16, then it's hex String will be only
                // one character, so we need to append a character of '0'
                sb.append("0");
            }
            sb.append(Integer.toHexString(value).toUpperCase());
        }
        return sb.toString();
    }

    public String md5fromfile(String path) throws NoSuchAlgorithmException, FileNotFoundException, IOException {
        MessageDigest md = MessageDigest.getInstance("MD5");
        FileInputStream fis = new FileInputStream(lokasifile);

        byte[] dataBytes = new byte[1024];

        int nread = 0;
        while ((nread = fis.read(dataBytes)) != -1) {
            md.update(dataBytes, 0, nread);
        };
        byte[] mdbytes = md.digest();
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < mdbytes.length; i++) {
            sb.append(Integer.toString((mdbytes[i] & 0xff) + 0x100, 16).substring(1));
        }
        String hasil = sb.toString();
        return hasil;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(getfromefile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(getfromefile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(getfromefile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(getfromefile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new getfromefile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel background;
    private javax.swing.JLabel benar;
    private javax.swing.JButton browse;
    private javax.swing.JButton browsecek;
    private javax.swing.JButton cek;
    private javax.swing.JButton gethash;
    private javax.swing.JTextArea hasil;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lokasia;
    private javax.swing.JLabel lokasicek;
    private javax.swing.JTextArea md5;
    private javax.swing.JButton reset;
    private javax.swing.JLabel salah;
    private javax.swing.JTextArea sha1;
    private javax.swing.JTextArea sha256;
    private javax.swing.JButton simpan;
    // End of variables declaration//GEN-END:variables
}
